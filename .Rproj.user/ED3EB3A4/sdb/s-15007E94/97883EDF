{
    "contents" : "##########################################################################################################\n\n## Coursera Getting and Cleaning Data Course Project\n## Heather Wade\n## 2014-04-27\n\n# runAnalysis.r File Description:\n\n# This script will perform the following steps on the UCI HAR Dataset downloaded from \n# https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip \n# 1. Merge the training and the test sets to create one data set.\n# 2. Extract only the measurements on the mean and standard deviation for each measurement. \n# 3. Use descriptive activity names to name the activities in the data set\n# 4. Appropriately label the data set with descriptive activity names. \n# 5. Creates a second, independent tidy data set with the average of each variable for each activity and each subject. \n\n##########################################################################################################\nlibrary(reshape2)\n# 1. Merge the training and the test sets to create one data set.\n\n#Read Training Data Sets and Assign Variable Names:\nfeatures<-read.table('./data/features.txt',header=FALSE)\nfeatures[,2] <- as.character(features[,2])\nactivityType<-read.table('./data/activity_labels.txt',header=FALSE)\nactivityType[,2] <- as.character(activityType[,2])\nsubjectTrain<-read.table('./data/train/subject_train.txt',header=FALSE)\nx_Train<-read.table('./data/train/x_train.txt',header=FALSE)\ny_Train<-read.table('./data/train/y_train.txt',header=FALSE)\n\ncolnames(activityType)<-c(\"activityID\",\"activityType\")\ncolnames(subjectTrain)<-\"subjectID\"\ncolnames(x_Train)<-features[,2]\ncolnames(y_Train)<-\"activityID\"\n\n#Binding data sets to form training data set\ntraining<-cbind(y_Train,subjectTrain,x_Train)\n\n#Read Test Data Sets and Assign Variable Names:\nsubjectTest<-read.table(\"./data/test/subject_test.txt\", header=FALSE)\nx_Test<-read.table(\"./data/test/x_test.txt\", header=FALSE)\ny_Test<-read.table(\"./data/test/y_test.txt\", header=FALSE)\n\ncolnames(subjectTest)<-\"subjectID\"\ncolnames(x_Test)<-features[,2]\ncolnames(y_Test)<-\"activityID\"\n\n#Binding data sets to form test data set\ntest<-cbind(y_Test,subjectTest,x_Test)\n\n#Combining test and training data sets\ndata<-rbind(training,test)\n\n# 2. Extract only the measurements on the mean and standard deviation for each measurement. \n\nmands_index<-grep(\".*mean.*|.*std.*|.*activity.*|.*subject.*\", colnames(data))\nmands_names<-colnames(data)[mands_index]\n\ndata<-data[,mands_index]\n\n# 3. Use descriptive activity names to name the activities in the data set\n\n#Replace Activity ID with Activity Names in Data set\n\ndata<-merge(activityType,data,all=TRUE)\n\n# 4. Appropriately label the data set with descriptive activity names. \n\ncolumns  = colnames(data); \n\n# Cleaning up the variable names\nfor (i in 1:length(columns)) \n{\n      columns[i] = gsub(\"\\\\()\",\"\",columns[i])\n      columns[i] = gsub(\"-std$\",\"StdDev\",columns[i])\n      columns[i] = gsub(\"-mean\",\"Mean\",columns[i])\n      columns[i] = gsub(\"^(t)\",\"time\",columns[i])\n      columns[i] = gsub(\"^(f)\",\"freq\",columns[i])\n      columns[i] = gsub(\"([Gg]ravity)\",\"Gravity\",columns[i])\n      columns[i] = gsub(\"([Bb]ody[Bb]ody|[Bb]ody)\",\"Body\",columns[i])\n      columns[i] = gsub(\"[Gg]yro\",\"Gyro\",columns[i])\n      columns[i] = gsub(\"AccMag\",\"AccMagnitude\",columns[i])\n      columns[i] = gsub(\"([Bb]odyaccjerkmag)\",\"BodyAccJerkMagnitude\",columns[i])\n      columns[i] = gsub(\"JerkMag\",\"JerkMagnitude\",columns[i])\n      columns[i] = gsub(\"GyroMag\",\"GyroMagnitude\",columns[i])\n}\n\ncolnames(data) = columns;\n\n# 5. Create a second, independent tidy data set with the average of each variable for each activity and each subject. \nfor (j in 4:length(ncol(data))){\n      data[,j]=as.numeric(data[,j])\n}\ndata<-data[,!(names(data) %in% \"activityType\")]\ndata$activityID <- factor(data$activityID, levels = activityType[,1], labels = activityType[,2])\ndata$subjectID <- as.factor(data$subjectID)\n\ndata.melted <- melt(data, id = c(\"subjectID\", \"activityID\"))\ndata.mean <- dcast(data.melted, subjectID + activityID ~ variable, mean)\n\nwrite.table(data.mean, \"tidy.txt\", row.names = FALSE)\n",
    "created" : 1445572450539.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3475570501",
    "id" : "97883EDF",
    "lastKnownWriteTime" : 1445771338,
    "path" : "~/DATA ANALYTICS/Course3Assignment/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}